name: TERRAFORM MODULE

on:
  workflow_call:
    secrets:
      GH_SA_TOKEN_RO:
        required: true
      TF_API_TOKEN:
        required: true
      # TERRATEST_AWS_ACCESS_KEY:
      #   required: true
      # TERRATEST_AWS_SECRET_ACCESS_KEY:
      #   required: true

jobs:
  terraform-fmt:
    runs-on: ubuntu-latest
    outputs:
      fmt_status: ${{ steps.fmt.outcome }}
      diff_exists: ${{ steps.fmt_commit.outputs.diff }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GH_SA_TOKEN_RO }}

      - name: Terraform Format
        uses: dflook/terraform-fmt@v1
        with:
          path: ./

      - name: Commit files
        run: |
          git config --local user.name "github-actions"
          git config --local user.email "noreply@nuvibit.com"
          if [[ -z $(git status -s) ]]
          then
            echo "::set-output name=diff::false"
          else
            echo "::set-output name=diff::true"
          fi
          git diff-index --quiet HEAD || git commit -m "style(terraform fmt): format code" -a

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.pull_request.head.ref }}

  terraform-docs:
    needs: terraform-fmt
    runs-on: ubuntu-latest
    outputs:
      docs_status: ${{ steps.docs.outcome }}
      diff_exists: ${{ steps.docs.outputs.num_changed > 0 }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GH_SA_TOKEN_RO }}

      - name: Terraform Docs
        id: docs
        uses: terraform-docs/gh-actions@v0.11.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          args: --sort-by required
          git-push: true
          git-push-user-name: "github-actions"
          git-push-user-email: "noreply@nuvibit.com"
          git-commit-message: "docs(terraform-docs): update README"

  # terraform-test:
  #   needs: [terraform-fmt, terraform-docs]
  #   if: ${{ needs.terraform-fmt.outputs.diff_exists == 'false' && needs.terraform-docs.outputs.diff_exists == 'false' }}
  #   runs-on: ubuntu-latest
  #   env: 
  #     AWS_ACCESS_KEY: ${{ secrets.TERRATEST_AWS_ACCESS_KEY }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.TERRATEST_AWS_SECRET_ACCESS_KEY }}

  #   strategy:
  #     max-parallel: 1
  #     matrix:
  #       include:
  #         - tf_version: "0.15.0"
  #           aws_version_operator: "~>"
  #           aws_version: "3.15"
  #           aws_version_operator_name: "rightmost"
            
  #         - tf_version: "1.0.1"
  #           aws_version_operator: ">="
  #           aws_version: "3.15"
  #           aws_version_operator_name: "greater-than-or-equal"

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         ref: ${{ github.event.pull_request.head.ref }}

  #     - name: Setup Go
  #       uses: actions/setup-go@v2

  #     - name: Setup Dependencies
  #       working-directory: ./test
  #       run:  |
  #         go get -v -t -d
  #         wget https://github.com/gruntwork-io/terratest/releases/download/v0.35.1/terratest_log_parser_linux_amd64
  #         chmod +x terratest_log_parser_linux_amd64

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v1
  #       with:
  #         terraform_version: ${{ matrix.tf_version }}
  #         terraform_wrapper: false
  #         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

  #     - name: Configure Provider
  #       working-directory: ./examples
  #       run: |
  #         for d in */
  #         do
  #           sed -i 's/^\(\s+version\s+=\s*"\).*\("\s*\)$/\1${{ matrix.aws_version_operator }} ${{ matrix.aws_version }}\2"/g' "$d/main.tf"
  #         done

  #     - name: Run Terratest
  #       working-directory: ./test
  #       run: |
  #         go test -v -timeout 60m 2>&1 | tee >(./terratest_log_parser_linux_amd64)

  #     - name: Upload Terratest Results
  #       if: ${{ always() }}
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: Terratest Results (Terraform ${{ matrix.tf_version }} & Provider.aws ${{ matrix.aws_version_operator_name }} ${{ matrix.aws_version }})
  #         path: |
  #           **/report.xml

  publish-results:
    needs: terraform-test
    runs-on: ubuntu-latest
    if: ${{ success() || failure() }}

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Terratest Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/**/*.xml
          check_name: TERRATEST RESULTS
          comment_title: TERRATEST RESULTS
          hide_comments: all but latest
          report_individual_runs: true
