name: LICENSE UPDATE

on:
  workflow_call:
    inputs:
      license_file_source_repo:
        description: 'Repository where license file is stored (needs to be public or in the same Github organization).'
        required: true
        type: string
      license_file_name:
        description: 'License file name.'
        default: "LICENSE"
        required: false
        type: string
      company_name:
        description: 'Company name to use in license header.'
        default: "Nuvibit AG"
        required: false
        type: string
      insert_header_file_extension:
        description: 'File extension of files where license header should be added.'
        default: ".tf"
        required: false
        type: string
      commit_user:
        description: 'Username which should be used for commits by github action'
        default: 'github-actions'
        required: false
        type: string
      commit_email:
        description: 'Email which should be used for commits by github action'
        default: 'noreply@github.com'
        required: false
        type: string
    secrets:
      # GitHub App credentials to avoid using GITHUB_TOKEN
      GH_APP_ID:
        required: true
      GH_APP_PRIVATE_KEY:
        required: true

jobs:
  license-update:
    runs-on: ubuntu-latest

    steps:
      - name: Get Github Access Token
        id: github_app_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          # if owner and repositories are empty, access will be scoped to only the current repository
          owner: ${{ github.repository_owner }}
          repositories: |
            ${{ inputs.license_file_source_repo }}
            ${{ github.event.repository.name }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout License File
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ inputs.license_file_source_repo }}
          path: remote_repo
          persist-credentials: false
          sparse-checkout: |
            ${{ inputs.license_file_name }}
          sparse-checkout-cone-mode: false
          token: ${{ steps.github_app_token.outputs.token }}

      - name: Update License File
        run: |
          rm -f LICENSE.md
          cp remote_repo/${{ inputs.license_file_name }} .
          rm -rf remote_repo

      - name: Insert License Header
        run: |
          sed -i 's/LICENSE.md/LICENSE/g' README.md
          find . -name "*${{ inputs.insert_header_file_extension }}" | while read file; do
            echo "updating license header in $file"
            sed -i '/^# Copyright/d' $file
            sed -i '/^# SPDX-License-Identifier/d' $file
            sed -i '/./,$!d' $file
            sed -i '1s/^/# Copyright (c) ${{ inputs.company_name }}\n# SPDX-License-Identifier: see terms and conditions in the LICENSE file\n\n/' $file
          done

      - name: Commit Changes
        run: |
          git config --local user.name "${{ inputs.commit_user }}"
          git config --local user.email "${{ inputs.commit_email }}"
          git add .
          if [[ -z $(git status -s) ]]; then
            echo "diff=false" >> $GITHUB_OUTPUT
          else
            echo "diff=true" >> $GITHUB_OUTPUT
          fi
          git diff-index --quiet HEAD || git commit -m "chore: update license" -a

      - name: Push Changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          branch: ${{ github.event.pull_request.head.ref }}
          github_token: ${{ steps.github_app_token.outputs.token }}
