name: HUGO DEPLOY

on:
  workflow_call:
    inputs:
      hugo_minify:
        description: 'Minify all files including html'
        default: false
        required: false
        type: boolean
      hugo_dry_run:
        description: 'See the changes without applying them'
        default: false
        required: false
        type: boolean
      hugo_target_name:
        description: 'Remote target for deployment'
        default: 'aws'
        required: false
        type: string
      hugo_version:
        description: 'Version of hugo binary'
        default: 'latest'
        required: false
        type: string
      hugo_extended:
        description: 'Use the extended version of hugo'
        default: true
        required: false
        type: boolean
      aws_default_region:
        description: 'AWS region to use for deployment (e.g. eu-central-1)'
        required: true
        type: string
      aws_oicd_role_arn:
        description: 'AWS OIDC IAM role ARN to assume for deployment (e.g. arn:aws:iam::111111111111:role/oidc-deployment-role)'
        required: true
        type: string

jobs:
  hugo-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ inputs.hugo_version }}
          extended: ${{ inputs.hugo_extended }}

      - name: Build Page (Minify)
        if: ${{ inputs.hugo_minify == true }}
        run: hugo --minify

      - name: Build Page
        if: ${{ inputs.hugo_minify == false }}
        run: hugo

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws_oicd_role_arn }}
          aws-region: ${{ inputs.aws_default_region }}

      - name: Deploy Page (Dry Run)
        if: ${{ inputs.hugo_dry_run == true }}
        run: hugo deploy --target ${{ inputs.hugo_target_name }} --dryRun

      - name: Deploy Page
        if: ${{ inputs.hugo_dry_run == false }}
        run: hugo deploy --target ${{ inputs.hugo_target_name }}